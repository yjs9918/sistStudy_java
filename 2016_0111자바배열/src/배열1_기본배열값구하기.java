/*
 * 배열(array)
 *   1) 같은 데이터 여러개를 묶어서 관리
 *      =======
 *   2) 저장 ==> 연속적으로 메모리에 저장
 *   3) 장점 : 데이터 관리가 수월
 *           ==> 변수명이 1개
 *      단점 : 고정 (추가, 삭제가 어렵다)
 *   4) 형식)
 *       데이터형[] 배열명;
 *       예) int[] arr; - 권장사항
 *       데이터형 배열명[];
 *       예) int arr[];
 *   5) 초기값
 *      1. 선언과 동시에 초기값 부여
 *         int[] arr={1,2,3,4,5};
 *      2. 선언 후에 초기값 부여
 *         int[] arr;
 *         arr[0]=1;
 *         arr[1]=2;
 *         ..
 *         ..
 *      3. new를 이용하는 방식 (가장 많이 구현)
 *         int[] arr=new int[5];
 *         new: 새로운 메모리를 요청
 *              malloc()
 *              => 자동으로 초기값 부여
 *                 int => 0
 *                 char => '\0'
 *                 double => 0.0
 *                 boolean => false\
 *      => 배열 선언 => 값을 부여
 *        int[] arr={10,20,30,40,50};
 *        
 *        arr        값 배치
 *                   arr[0] arr[1] arr[2] ...
 *        ====       ================================
 *                    10    20    30    40    50
 *        ====       ================================
 *             (임의)100  104   108   112    116  
 *        ==> 1번쨰 값을 100으로 변경
 *            arr[0]=100;
 */
public class 배열1_기본배열값구하기 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr={10,20,30,40,50};
		// 값출력 0 ~ 4
		for(int i=0;i<5;i++)
		{
			System.out.printf("%d번째 값:%d\n",
					(i+1),arr[i]);
		}

	}

}
